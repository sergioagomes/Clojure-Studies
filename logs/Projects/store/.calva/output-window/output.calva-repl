; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Reading port file: file:///mnt/c/Users/Sergio%20Gomes/Dev/Clojure-Studies/logs/Projects/store/.nrepl-port ...
; No nrepl port file found.
; Bad url: localhost:
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Connecting ...
; Reading port file: file:///mnt/c/Users/Sergio%20Gomes/Dev/Clojure-Studies/logs/Projects/store/.nrepl-port ...
; Using host:port localhost:41745 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉store.core꞉>  ; Use `alt+enter` to evaluate
clj꞉store.core꞉> 
; nREPL Connection was closed
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Connecting ...
; Reading port file: file:///mnt/c/Users/Sergio%20Gomes/Dev/Clojure-Studies/logs/Projects/store/.nrepl-port ...
; No nrepl port file found.
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Connecting ...
; Reading port file: file:///mnt/c/Users/Sergio%20Gomes/Dev/Clojure-Studies/logs/Projects/store/.nrepl-port ...
; Using host:port localhost:38319 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉store.core꞉> 
clj꞉store.core꞉> 
; Syntax error macroexpanding clojure.core/ns at (src/store/class5.clj:1:1).
; ((:required [store.db :as s.db])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
clj꞉store.class5꞉> 
; Syntax error compiling at (src/store/class5.clj:4:1).
; Unable to resolve symbol: println in this context
clj꞉store.class5꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /mnt/c/Users/Sergio Gomes/Dev/Clojure-Studies/logs/Projects/store ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:45283 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉store.core꞉> 
clj꞉store.core꞉> 
; Jack-in done.
clj꞉store.core꞉> 
; Syntax error macroexpanding clojure.core/ns at (src/store/class5.clj:1:1).
; ((:required [store.db :as s.db])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
clj꞉store.class5꞉> 
nil
clj꞉store.class5꞉> 
[{:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}]
nil
clj꞉store.class5꞉> 
nil
clj꞉store.class5꞉> 
nil
clj꞉store.class5꞉> 
; Syntax error compiling at (src/store/logic.clj:32:4).
; Unable to resolve symbol: quantity-of-orders-and-value-total-per-user in this context
clj꞉store.logic꞉> 
; Syntax error compiling at (src/store/logic.clj:31:4).
; Unable to resolve symbol: quantity-of-orders-and-value-total-per-user in this context
clj꞉store.logic꞉> 
; Execution error (IllegalStateException) at store.class5/eval8093 (form-init8408176753939247884.clj:7).
; Attempting to call unbound fn: #'store.logic/resume-per-user
clj꞉store.class5꞉> 
; Syntax error compiling at (src/store/logic.clj:37:8).
; Unable to resolve symbol: quantity-of-orders-and-value-total-per-user in this context
clj꞉store.logic꞉> 
; Syntax error compiling at (src/store/logic.clj:38:17).
; Unable to resolve symbol: total-of-user in this context
clj꞉store.logic꞉> 
#'store.logic/total-item
clj꞉store.logic꞉> 
#'store.logic/total-of-order
clj꞉store.logic꞉> 
#'store.logic/total-of-user
clj꞉store.logic꞉> 
#'store.logic/quantity-of-orders-and-value-total-per-user
clj꞉store.logic꞉> 
#'store.logic/resumo-por-usuario
clj꞉store.logic꞉> 
#'store.logic/resume-per-user
clj꞉store.logic꞉> 
({:user-id [{:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 1, :total-price 280} {:user-id [{:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 2, :total-price 560})
nil
clj꞉store.class5꞉> 
nil
clj꞉store.class5꞉> 
Resume ({:user-id [{:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 1, :total-price 280} {:user-id [{:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 2, :total-price 560})
Order ({:user-id [{:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 1, :total-price 280} {:user-id [{:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 2, :total-price 560})
nil
clj꞉store.class5꞉> 
#'store.class5/resume-per-user-orderned
clj꞉store.class5꞉> 
Resume ({:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}})
nil
clj꞉store.class5꞉> 
#'store.class5/resume-per-user-orderned
clj꞉store.class5꞉> 
Resume ({:user-id [{:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}} {:user 12, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 2, :total-price 560} {:user-id [{:user 1, :items {:bag {:id :bag, :amount 2, :unit-price 80}, :shirt {:id :shirt, :amount 3, :unit-price 40}, :shoes {:id :shoes, :amount 1}}}], :total-orders 1, :total-price 280})
nil
clj꞉store.class5꞉> 
